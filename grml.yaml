version: 2
project: grml

envs:
    - ./bin/env/a.yaml
    - ./bin/env/b.yaml

env:
    VERSION: 1.0.0
    BINDIR:  ${ROOT}/bin
    TEST_D: "${TEST_D}---"

commands:
    build:
        help: build the prebuild binaries
        deps:
            - build.linux-amd64
            - build.win-amd64
        commands:
            linux-amd64:
                help: build for linux-amd64
                exec: |
                    mkdir -p "${BINDIR}"
                    docker run \
                        --rm \
                        -v "$ROOT":/work \
                        -w /work \
                        -e CGO_ENABLED=0 \
                        -e GOOS=linux \
                        -e GOARCH=amd64 \
                        golang:alpine \
                            go build -o bin/grml-${VERSION}-lin-amd64 -ldflags="-s -w"
            win-amd64:
                help: build for win-amd64
                exec: |
                    mkdir -p "${BINDIR}"
                    docker run \
                        --rm \
                        -v "$ROOT":/work \
                        -w /work \
                        -e CGO_ENABLED=0 \
                        -e GOOS=windows \
                        -e GOARCH=amd64 \
                        golang:alpine \
                            go build -o bin/grml-${VERSION}-win-amd64.exe -ldflags="-s -w"

    test:
        help: test new functionalities
        exec: |
            echo "A: ${TEST_A}"
            echo "B: ${TEST_B}"
            echo "C: ${TEST_C}"
            echo "D: ${TEST_D}"
            echo "X: ${TEST_X}"
            echo "Y: ${TEST_Y}"
            echo "Z: ${TEST_Z}"
            echo "D: ${BINDIR}"
